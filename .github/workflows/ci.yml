# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  - push
  - pull_request

name: CI

jobs:
  coding-standards:
    name: Coding Standards

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Build Docker image for PHP 7.2
        uses: ./.docker/php-7.2
        with:
          args: php -v

      - name: Validate composer.json and composer.lock
        uses: ./.docker/php-7.2
        with:
          args: composer validate --strict

      - name: Install dependencies with composer
        uses: ./.docker/php-7.2
        with:
          args: composer install

      - name: Run localheinz/composer-normalize
        uses: ./.docker/php-7.2
        with:
          args: composer normalize --dry-run

      - name: Run friendsofphp/php-cs-fixer
        uses: ./.docker/php-7.2
        with:
          args: vendor/bin/php-cs-fixer fix --diff --dry-run --using-cache=no --verbose

  static-code-analysis:
    name: Static Code Analysis

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Build Docker image for PHP 7.3
        uses: ./.docker/php-7.3
        with:
          args: php -v

      - name: Install dependencies with composer
        uses: ./.docker/php-7.3
        with:
          args: composer install

      - name: Run phpstan/phpstan
        uses: ./.docker/php-7.3
        with:
          args: vendor/bin/phpstan analyse --configuration=phpstan.neon

  test-php-7-2:
    name: Tests on PHP 7.2

    runs-on: ubuntu-latest

    strategy:
      matrix:
        composer-command:
          - 'update --prefer-lowest'
          - 'install'
          - 'update'

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Build Docker image for PHP 7.2
        uses: ./.docker/php-7.2
        with:
          args: php -v

      - name: Install dependencies with composer
        uses: ./.docker/php-7.2
        with:
          args: composer ${{ matrix.composer-command }}

      - name: Run auto-review tests with phpunit/phpunit
        uses: ./.docker/php-7.2
        with:
          args: vendor/bin/phpunit --configuration=test/AutoReview/phpunit.xml

      - name: Run unit tests with phpunit/phpunit
        uses: ./.docker/php-7.2
        with:
          args: vendor/bin/phpunit --configuration=test/Unit/phpunit.xml

      - name: Run integration tests with phpunit/phpunit
        uses: ./.docker/php-7.2
        with:
          args: vendor/bin/phpunit --configuration=test/Integration/phpunit.xml

  test-php-7-3:
    name: Tests on PHP 7.3

    runs-on: ubuntu-latest

    strategy:
      matrix:
        composer-command:
          - 'update --prefer-lowest'
          - 'install'
          - 'update'

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Build Docker image for PHP 7.3
        uses: ./.docker/php-7.3
        with:
          args: php -v

      - name: Install dependencies with composer
        uses: ./.docker/php-7.3
        with:
          args: composer ${{ matrix.composer-command }}

      - name: Run auto-review tests with phpunit/phpunit
        uses: ./.docker/php-7.3
        with:
          args: vendor/bin/phpunit --configuration=test/AutoReview/phpunit.xml

      - name: Run unit tests with phpunit/phpunit
        uses: ./.docker/php-7.3
        with:
          args: vendor/bin/phpunit --configuration=test/Unit/phpunit.xml

      - name: Run integration tests with phpunit/phpunit
        uses: ./.docker/php-7.3
        with:
          args: vendor/bin/phpunit --configuration=test/Integration/phpunit.xml

  code-coverage:
    name: Code Coverage

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Build Docker image for PHP 7.3 with Xdebug
        uses: ./.docker/php-7.3-with-xdebug
        with:
          args: php -v

      - name: Install dependencies with composer
        uses: ./.docker/php-7.3-with-xdebug
        with:
          args: composer install

      - name: Dump Xdebug filter with phpunit/phpunit
        uses: ./.docker/php-7.3-with-xdebug
        with:
          args: vendor/bin/phpunit --configuration=test/Unit/phpunit.xml --dump-xdebug-filter=.build/phpunit/xdebug-filter.php

      - name: Collect coverage with Xdebug and phpunit/phpunit
        uses: ./.docker/php-7.3-with-xdebug
        with:
          args: vendor/bin/phpunit --configuration=test/Unit/phpunit.xml --coverage-clover=build/logs/clover.xml --prepend=.build/phpunit/xdebug-filter.php

      - name: Download code coverage uploader for Codecov.io
        uses: ./.docker/php-7.3-with-xdebug
        with:
          args: 'curl -s https://codecov.io/bash -o codecov'

      - name: Send coverage to Codecov.io
        uses: ./.docker/php-7.3-with-xdebug
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          args: 'bash codecov'

  mutation-tests:
    name: Mutation Tests

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Build Docker image for PHP 7.3 with Xdebug
        uses: ./.docker/php-7.3-with-xdebug
        with:
          args: php -v

      - name: Install dependencies with composer
        uses: ./.docker/php-7.3-with-xdebug
        with:
          args: composer install

      - name: Dump Xdebug filter with phpunit/phpunit
        uses: ./.docker/php-7.3-with-xdebug
        with:
          args: vendor/bin/phpunit --configuration=test/Unit/phpunit.xml --dump-xdebug-filter=.build/phpunit/xdebug-filter.php

      - name: Collect coverage with Xdebug and phpunit/phpunit
        uses: ./.docker/php-7.3-with-xdebug
        with:
          args: vendor/bin/phpunit --configuration=test/Unit/phpunit.xml --coverage-clover=build/logs/clover.xml --prepend=.build/phpunit/xdebug-filter.php

      - name: Run mutation tests with infection/infection
        uses: ./.docker/php-7.3-with-xdebug
        with:
          args: vendor/bin/infection --ignore-msi-with-no-mutations --min-covered-msi=100 --min-msi=100
